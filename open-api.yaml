---
swagger: "2.0"
info:
  version: "1.0"
  title: "lambda-authorizer"
host: "w8o5enj299.execute-api.us-east-1.amazonaws.com"
basePath: "/Prod"
schemes:
- "https"
paths:
  /users/{userName}:
    get:
      parameters:
      - name: "userName"
        in: "path"
        required: true
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      responses: {}
      security:
      - PhotoAppUsersLambdaAuthorizer: []
      x-amazon-apigateway-request-validator: "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:234604075075:function:lambda-authorizer-GetUserByUsernameHandlerFunction-fPiEVmjBuW9T/invocations"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"
securityDefinitions:
  PhotoAppUsersLambdaAuthorizer:
    type: "apiKey"
    name: "Authorization"
    in: "header"
    x-amazon-apigateway-authtype: "custom"
    x-amazon-apigateway-authorizer:
      authorizerUri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:234604075075:function:lambda-authorizer-LambdaAuthorizerFunction-YB7non1T8s1a/invocations"
      identitySource: "method.request.header.Authorization"
      authorizerResultTtlInSeconds: 0
      type: "request"
x-amazon-apigateway-request-validators:
  Validate query string parameters and headers:
    validateRequestParameters: true
    validateRequestBody: false
